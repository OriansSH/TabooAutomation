name: Daily Playwright Tests

on:
  schedule:
    - cron: '0 4 * * *'   # 7:00 AM IL (UTC+3)
    - cron: '0 16 * * *'  # 7:00 PM IL (UTC+3)
  workflow_dispatch:

jobs:
  Daily-Tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Clear previous Allure results
        run: rm -rf ./allure-results/*

      - name: Run Playwright tests with JSON reporter
        run: |
          npx playwright test --reporter=json --output=playwright-report.json || true

      - name: Parse Playwright JSON results
        id: parse_results
        run: |
          node <<EOF
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('playwright-report.json', 'utf-8'));
          const results = report.suites.flatMap(suite => suite.tests);
          const total = results.length;
          const passed = results.filter(t => t.status === 'passed').length;
          const failed = results.filter(t => t.status === 'failed').length;
          console.log(`::set-output name=total::${total}`);
          console.log(`::set-output name=passed::${passed}`);
          console.log(`::set-output name=failed::${failed}`);
          EOF

      - name: Install Allure CLI
        if: always()
        run: npm install -g allure-commandline
      
      - name: Generate Allure Report
        if: always()
        run: allure generate ./allure-results --output ./allure-report --clean
      
      - name: Upload Allure Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Send Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: PlaywrightBot
          SLACK_ICON_EMOJI: ':robot_face:'
          SLACK_COLOR: ${{ steps.parse_results.outputs.failed == '0' && 'good' || 'danger' }}
          SLACK_MESSAGE: |
            *Daily Playwright Tests Result*  
            Total tests: ${{ steps.parse_results.outputs.total }}  
            Passed: ${{ steps.parse_results.outputs.passed }}  
            Failed: ${{ steps.parse_results.outputs.failed }}  
            Triggered by: ${{ github.actor }}  
            Branch: ${{ github.ref_name }}  
            [View Logs and Download Allure Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
