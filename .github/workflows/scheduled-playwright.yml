name: Daily Playwright Tests

on:
  schedule:
    - cron: '0 6 * * *'   # 9:00 AM IL (UTC+3)
    - cron: '0 11 * * *'  # 14:00 PM IL (UTC+3)
    - cron: '0 16 * * *'  # 19:00 PM IL (UTC+3)
  workflow_dispatch:

jobs:
  Daily-Tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Clear previous Allure results
        run: rm -rf ./allure-results/*

      # All standard tests except gameTests.spec.js
      - name: Run Automation tests with Allure reporter
        id: test
        run: npx playwright test --grep-invert @game --reporter=line,allure-playwright
        continue-on-error: true

      # Only run game test to isolate slow behavior
      - name: Run game test separately (with retry)
        id: game
        run: npx playwright test __tests__/game/gameTests.spec.js --retries=1 --reporter=line,allure-playwright
        continue-on-error: true


      - name: Install Allure CLI
        if: always()
        run: npm install -g allure-commandline

      - name: Generate Allure Report
        if: always()
        run: allure generate ./allure-results --output ./allure-report --clean

      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: allure-report/${{ github.run_id }}

      - name: Upload Allure Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Send Slack Notification (Success)
        if: steps.test.outcome == 'success' && steps.game.outcome == 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
            SLACK_USERNAME: PlaywrightBot
            SLACK_ICON_EMOJI: ':robot_face:'
            SLACK_COLOR: 'good'
            SLACK_MESSAGE: |
              *Daily Playwright Tests:* ✅ `Success`
              - Triggered by: `${{ github.actor }}`
              - Branch: `${{ github.ref_name }}`
              - [Logs & Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
              - :rocket: [Allure Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report/${{ github.run_id }}/)
  
      - name: Send Slack Notification (Failure)
        if: steps.test.outcome != 'success' || steps.game.outcome != 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_FAILURE }}
            SLACK_USERNAME: PlaywrightBot
            SLACK_ICON_EMOJI: ':robot_face:'
            SLACK_COLOR: 'danger'
            SLACK_MESSAGE: |
              *Daily Playwright Tests:* ❌ `Failure`
              - Triggered by: `${{ github.actor }}`
              - Branch: `${{ github.ref_name }}`
              - [Logs & Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
              - :rocket: [Allure Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report/${{ github.run_id }}/)